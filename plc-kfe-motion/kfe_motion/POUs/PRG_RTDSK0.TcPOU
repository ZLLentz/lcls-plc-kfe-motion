<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="PRG_RTDSK0" Id="{2448ff63-669b-47ca-a22b-bc6b1d1306d5}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_RTDSK0
VAR

   {attribute 'TcLinkTo' := '.i_xInsertedLS := TIIB[RTDSK0-MPA-EL1008]^Channel 1^Input;
                             .i_xRetractedLS := TIIB[RTDSK0-MPA-EL1008]^Channel 2^Input;
                             .q_xInsert_DO :=  TIIB[RTDSK0-MPA-EL2008]^Channel 1^Output;
                             .q_xRetract_DO :=  TIIB[RTDSK0-MPA-EL2008]^Channel 2^Output
    '}

     {attribute 'pytmc' :=' pv: RTDSK0:MPA:01 '}
    RTDSK0_MPA_01: FB_MPA := (sName := 'RTDSK0:MPA:01');

   {attribute 'TcLinkTo' := '.i_xInsertedLS := TIIB[RTDSK0-MPA-EL1008]^Channel 3^Input;
                             .i_xRetractedLS := TIIB[RTDSK0-MPA-EL1008]^Channel 4^Input;
                             .q_xInsert_DO :=  TIIB[RTDSK0-MPA-EL2008]^Channel 3^Output;
                             .q_xRetract_DO :=  TIIB[RTDSK0-MPA-EL2008]^Channel 4^Output
    '}


    {attribute 'pytmc' :=' pv: RTDSK0:MPA:02 '}
    RTDSK0_MPA_02: FB_MPA := (sName := 'RTDSK0:MPA:02');

       {attribute 'TcLinkTo' := '.i_xInsertedLS := TIIB[RTDSK0-MPA-EL1008]^Channel 5^Input;
                             .i_xRetractedLS := TIIB[RTDSK0-MPA-EL1008]^Channel 6^Input;
                             .q_xInsert_DO :=  TIIB[RTDSK0-MPA-EL2008]^Channel 5^Output;
                             .q_xRetract_DO :=  TIIB[RTDSK0-MPA-EL2008]^Channel 6^Output
    '}

    {attribute 'pytmc' :=' pv: RTDSK0:MPA:03 '}
    RTDSK0_MPA_03: FB_MPA := (sName := 'RTDSK0:MPA:03');

       {attribute 'TcLinkTo' := '.i_xInsertedLS := TIIB[RTDSK0-MPA-EL1008]^Channel 7^Input;
                             .i_xRetractedLS := TIIB[RTDSK0-MPA-EL1008]^Channel 8^Input;
                             .q_xInsert_DO :=  TIIB[RTDSK0-MPA-EL2008]^Channel 7^Output;
                             .q_xRetract_DO :=  TIIB[RTDSK0-MPA-EL2008]^Channel 8^Output
    '}
    {attribute 'pytmc' :=' pv: RTDSK0:MPA:04 '}
    RTDSK0_MPA_04: FB_MPA := (sName := 'RTDSK0:MPA:04');
    
    fbRTDSK0_SCRP_MMS_Z: FB_MotionStage;
    fbRTDSK0_SCRP_MMS_X: FB_MotionStage;
    fbRTDSK0_SCRP_MMS_Y: FB_MotionStage;
    
     {attribute 'pytmc' := 'pv: RTDSK0:SCRP:LED:01:PWR
      io: io
        field: ZNAM OFF
        field: ONAM ON
'}
     
     {attribute 'TcLinkTo' := 'TIIB[RTDSK0-EL2004]^Channel 2^Output'}
    fbRTDSK0_SCRP_LED_01 AT %Q*: BOOL;;
    
	FFO : FB_FastFault :=( i_Desc := 'fault occurs when Y motor is not activating upper limit switch', i_TypeCode := 16#FAF, i_DevName := 'RTDSK0:SCRP:MMS:Y');
    bInit: BOOL := TRUE;



END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
//Pneumatic actuators - OTR filters

RTDSK0_MPA_01(
    ibInsertOK:= TRUE,
    ibRetractOK:= TRUE ,
    ibPMPS_OK:= TRUE ,
    ibOverrideInterlock:= ,
    q_stAct=> ,
    xMPS_OK=> ,
    xDone=> ,
    i_xReset := ,
    io_fbFFHWO := GVL.fbFastFaultOutput1,
);

RTDSK0_MPA_02(
    ibInsertOK:= TRUE,
    ibRetractOK:= TRUE ,
    ibPMPS_OK:= TRUE ,
    ibOverrideInterlock:= ,
    q_stAct=> ,
    xMPS_OK=> ,
    xDone=> ,
    i_xReset := ,
    io_fbFFHWO := GVL.fbFastFaultOutput1,
);

(*
Disable MPA_03 and MPA_04, no actuator installed

RTDSK0_MPA_03(
    ibInsertOK:= TRUE,
    ibRetractOK:= TRUE ,
    ibPMPS_OK:= TRUE ,
    ibOverrideInterlock:= ,
    q_stAct=> ,
    xMPS_OK=> ,
    xDone=> ,
    i_xReset := ,
    io_fbFFHWO := GVL.fbFastFaultOutput1,
);

RTDSK0_MPA_04(
    ibInsertOK:= TRUE,
    ibRetractOK:= TRUE ,
    ibPMPS_OK:= TRUE ,
    ibOverrideInterlock:= ,
    q_stAct=> ,
    xMPS_OK=> ,
    xDone=> ,
    i_xReset := ,
    io_fbFFHWO := GVL.fbFastFaultOutput1,
);
*)

//initialize RTDSK0 stages
IF bInit THEN
    Main.M11.bHardwareEnable := TRUE;
    Main.M11.bPowerSelf :=TRUE;
    Main.M11.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;
    Main.M11.nEnableMode := ENUM_StageEnableMode.DURING_MOTION;
    Main.M11.fHomePosition := 0;
    
    Main.M12.bHardwareEnable := TRUE;
    Main.M12.bPowerSelf :=TRUE;
    Main.M12.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;
    Main.M12.nEnableMode := ENUM_StageEnableMode.DURING_MOTION;
    Main.M12.fHomePosition := 0;
    
    Main.M13.bHardwareEnable := TRUE;
    Main.M13.bPowerSelf :=TRUE;
    Main.M13.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;
    Main.M13.nEnableMode := ENUM_StageEnableMode.DURING_MOTION;
    Main.M13.fHomePosition := 0;
	
	Main.M11.nHomingMode := ENUM_EpicsHomeCmd.HIGH_LIMIT;
    Main.M12.nHomingMode := ENUM_EpicsHomeCmd.HIGH_LIMIT;
    Main.M13.nHomingMode := ENUM_EpicsHomeCmd.HIGH_LIMIT;
    
    bInit := FALSE;
END_IF
    
    fbRTDSK0_SCRP_MMS_Z (stMotionStage := Main.M11);
    fbRTDSK0_SCRP_MMS_X (stMotionStage := Main.M12);
    fbRTDSK0_SCRP_MMS_Y (stMotionStage := Main.M13);
    FFO(i_xOK := NOT(Main.M13.bLimitForwardEnable) AND Main.M13.bLimitBackwardEnable, io_fbFFHWO := GVL.fbFastFaultOutput1);]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>